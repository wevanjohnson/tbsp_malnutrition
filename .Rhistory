}
}
overlap_matrix <- matrix(0, nrow = length(TBsignatures),
ncol = length(TBsignatures))
for (i in 1:length(TBsignatures)){
for (j in 1:length(TBsignatures)){
overlap_matrix[i, j] <- sum(
!is.na(match(TBsignatures[[i]],
TBsignatures[[j]]))) / length(TBsignatures[[i]])
}
}
rownames(overlap_matrix) <- colnames(overlap_matrix) <- names(TBsignatures)
over_pct <- round(overlap_matrix, 3) * 100
write.csv(overlap_matrix, file = "~/projects/malnutrition/manuscript_BMC_ID/figures/overlap.csv", quote = FALSE)
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/Heatmap_ssGSEA.png", width = 12, height = 10, units = "in",
res = 150)
signatureHeatmap(ssgsea_res, name = "ssGSEA",
signatureColNames = names(TBsignatures),
annotationColNames = c("status"),
showColumnNames = FALSE, scale = TRUE,
choose_color = col.me,
colList = colorList)
dev.off()
?signatureHeatmap
?Heatmap
signatureHeatmap(ssgsea_res, name = "ssGSEA",
signatureColNames = names(TBsignatures),
annotationColNames = c("status"),
showColumnNames = FALSE, scale = TRUE,
choose_color = col.me,
cluster_columns = TRUE,
colList = colorList)
signatureHeatmap(ssgsea_res, name = "ssGSEA",
signatureColNames = names(TBsignatures),
annotationColNames = c("status"),
showColumnNames = FALSE, scale = TRUE,
choose_color = col.me,
cluster_columns = TRUE,
split_heatmap = "disease",
colList = colorList)
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/Heatmap_ssGSEA.png", width = 12, height = 10, units = "in",
res = 150)
signatureHeatmap(ssgsea_res, name = "ssGSEA",
signatureColNames = names(TBsignatures),
annotationColNames = c("status"),
showColumnNames = FALSE, scale = TRUE,
choose_color = col.me,
cluster_columns = TRUE,
split_heatmap = "disease",
colList = colorList)
dev.off()
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/Heatmap_GSVA.png", width = 12, height = 10, units = "in",res = 150)
signatureHeatmap(gsva_res, name = "GSVA",
signatureColNames = names(TBsignatures),
annotationColNames = c("status"),
showColumnNames = FALSE, scale = TRUE,
choose_color = col.me,
colList = colorList)
dev.off()
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/AUC_boxplot_ssGSEA.png", width = 10, height = 10,
units = "in", res = 150)
signatureBoxplot(ssgsea_res, name="ssGSEA",
signatureColNames = names(TBsignatures),
annotationColName = c("status"),
fill_colors = c(special_blue, special_red))
dev.off()
signatureHeatmap(gsva_res, name = "GSVA",
signatureColNames = names(TBsignatures),
annotationColNames = c("status"),
showColumnNames = FALSE, scale = TRUE,
choose_color = col.me,
cluster_columns = TRUE,
split_heatmap = "disease",
colList = colorList)
par(mar = c(7,2,2,1))
compareBoxplots(ssgsea_res, signatureColNames = names(TBsignatures),
annotationColName = "status", pb.show = TRUE,
name = "ssGSEA", rotateLabels = TRUE,
fill.col = special_red)
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/score_boxplot_ssGSEA.png", width = 7, height = 5,
units = "in", res = 150)
par(mar = c(7,2,2,1))
compareBoxplots(ssgsea_res, signatureColNames = names(TBsignatures),
annotationColName = "status", pb.show = TRUE,
name = "ssGSEA", rotateLabels = TRUE,
fill.col = special_red)
dev.off()
compareBoxplots(gsva_res, signatureColNames = names(TBsignatures),
annotationColName = "status", pb.show = TRUE,
name = "GSVA", fill.col = special_red,
rotateLabels = TRUE)
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/score_boxplot_GSVA.png", width = 7, height = 5,
units = "in", res = 150)
par(mar = c(7,2,2,1))
compareBoxplots(gsva_res, signatureColNames = names(TBsignatures),
annotationColName = "status", pb.show = TRUE,
name = "GSVA", fill.col = special_red,
rotateLabels = TRUE)
dev.off()
signatureGeneHeatmap(ssgsea_res, useAssay = "log_cpm",
sigGenes = TBsignatures[["Sambarey_HIV_10"]],
name = "Sambarey_HIV_10", signatureColNames = NULL,
annotationColNames = c("status"), scale = TRUE,
choose_color = col.me,
colList = colorList,
showColumnNames = FALSE)
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/Sambarey_HIV_10.png", width = 6, height = 4, units = "in",
res = 150)
signatureGeneHeatmap(ssgsea_res, useAssay = "log_cpm",
sigGenes = TBsignatures[["Sambarey_HIV_10"]],
name = "Sambarey_HIV_10", signatureColNames = NULL,
annotationColNames = c("status"), scale = TRUE,
choose_color = col.me,
colList = colorList,
cluster_columns = TRUE,
showColumnNames = FALSE)
dev.off()
signatureGeneHeatmap(ssgsea_res, useAssay = "log_cpm",
sigGenes = TBsignatures[["Sambarey_HIV_10"]],
name = "Sambarey_HIV_10", signatureColNames = NULL,
annotationColNames = c("status"), scale = TRUE,
choose_color = col.me,
colList = colorList,
cluster_columns = TRUE,
showColumnNames = FALSE)
signatureGeneHeatmap(ssgsea_res, useAssay = "log_cpm",
TBsignatures[["Thompson_9"]],
name = "Thompson_9", signatureColNames = NULL,
choose_color = col.me,
colList = colorList,
annotationColNames = c("status"),
cluster_columns = TRUE,
showColumnNames = FALSE)
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/Thompson_9.png", width = 6, height = 4, units = "in",
res = 150)
signatureGeneHeatmap(ssgsea_res, useAssay = "log_cpm",
TBsignatures[["Thompson_9"]],
name = "Thompson_9", signatureColNames = NULL,
choose_color = col.me,
colList = colorList,
annotationColNames = c("status"),
cluster_columns = TRUE,
showColumnNames = FALSE)
dev.off()
signatureGeneHeatmap(ssgsea_res, useAssay = "log_cpm",
TBsignatures[["Lee_4"]],
name = "Lee_4", signatureColNames = NULL,
choose_color = col.me,
colList = colorList,
annotationColNames = c("status"),
cluster_columns = TRUE,
showColumnNames = FALSE)
signatureGeneHeatmap(ssgsea_res, useAssay = "log_cpm",
TBsignatures[["Maertzdorf_4"]],
name = "Maertzdorf_4", signatureColNames = NULL,
choose_color = col.me,
colList = colorList,
annotationColNames = c("status"),
cluster_columns = TRUE,
showColumnNames = FALSE)
signatureROCplot_CI(ssgsea_res, signatureColNames = names(TBsignatures),
scale = TRUE, annotationColName = "status",
name =
"ROC Plots for Gene Signatures, 95% Confidence, ssGSEA",
nrow = 6, ncol = 6, choose_colors = c(special_blue,
"gray50",
"gray79"))
signatureROCplot_CI(gsva_res, signatureColNames = names(TBsignatures),
scale = TRUE, annotationColName = "status",
name =
"ROC Plots for Gene Signatures, 95% Confidence, GSVA",
nrow = 6, ncol = 6, choose_colors = c(special_blue,
"gray50",
"gray79"),
)
out.ssgsea <- tableAUC(ssgsea_res, "status", names(TBsignatures),
output = "data.frame")
out.ssgsea
datatable(out.ssgsea)
out.gsva <- tableAUC(gsva_res, "status", names(TBsignatures), output = "data.frame")
datatable(out.ssgsea)
datatable(out.gsva)
df=data.frame(TB_status=colData(indata)$Tb_status,TB_status=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df_mal, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
mat = as.matrix(assay(indata,"log_cpm")[sigGenesTB[1:500],])
mat = t(scale(t(mat)))
df=data.frame(TB_status=colData(indata)$Tb_status,TB_status=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
df=data.frame("TB Status"=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
special_red <- RColorBrewer::brewer.pal(3, "Set1")[1]
special_blue <- RColorBrewer::brewer.pal(3, "Set1")[2]
mat = as.matrix(assay(indata,"log_cpm")[sigGenesTB[1:500],])
mat = t(scale(t(mat)))
df=data.frame("TB Status"=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
# some things related to colors
special_red <- RColorBrewer::brewer.pal(3, "Set1")[1]
special_blue <- RColorBrewer::brewer.pal(3, "Set1")[2]
# COLORS FOR HEATMAP
col.me <- viridis::viridis(15)
colorList <- list("status" = setNames(c(special_red,
special_blue),
c("TB_mal", "LTBI_mal")))
# colorList <- list("status" = setNames(c(viridis::magma(20)[12],
#                                         viridis::magma(20)[18]),
#                                       c("TB_mal", "LTBI_mal")))
#mat <- readRDS("~/projects/malnutrition/DiffExp_matrix_mal.RDS")
#df_mal <- readRDS("~/projects/malnutrition/DiffExp_annot_mal.RDS")
mat = as.matrix(assay(indata,"log_cpm")[sigGenesTB[1:500],])
mat = t(scale(t(mat)))
df=data.frame("TB Status"=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
png(filename = "~/projects/malnutrition/manuscript_BMC_ID/figures/Heatmap_DIFF_EXP.png", width = 12, height = 10, units = "in",
res = 150)
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
dev.off()
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
df=data.frame("TB Status"=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
signatureBoxplot(plage_res, signatureColNames = names(TBsignatures),
annotationColName = c("status"), name = "PLAGE",
fill_colors = c(special_blue, special_red),
rotateLabels = TRUE)
par(mar = c(7,2,2,1))
compareBoxplots(plage_res, signatureColNames = names(TBsignatures),
annotationColName = "status", pb.show = TRUE,
name = "PLAGE", fill.col = special_red,
rotateLabels = TRUE)
signatureHeatmap(plage_res, name = "PLAGE",
signatureColNames = names(TBsignatures),
annotationColNames = c("status"),
showColumnNames = FALSE, scale = TRUE,
choose_color = col.me,
colList = colorList)
signatureHeatmap(plage_res, name = "PLAGE",
signatureColNames = names(TBsignatures),
annotationColNames = c("status"),
showColumnNames = FALSE, scale = TRUE,
choose_color = col.me,
cluster_columns = TRUE,
split_heatmap = "disease",
colList = colorList)
out.ssgsea <- tableAUC(ssgsea_res, "status", names(TBsignatures),
output = "data.frame")
write.csv(out.ssgsea, file = "~/projects/malnutrition/manuscript_BMC_ID/figures/ssgsea_tableAUC.csv", quote = FALSE)
designBC <- model.matrix(~Tb_status, data=colData(indata))
colnames(designBC) <- c("Intercept", "activeTB")
#head(designBC)
fitBC <- lmFit(assay(indata, "log_cpm"), designBC)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(SummarizedExperiment)
library(SingleCellExperiment)
library(tidyverse)
library(TBSignatureProfiler)
library(sva)
library(Rtsne)
library(umap)
library(limma)
library(DT)
library(ComplexHeatmap)
library(enrichR)
})
indata <- readRDS("~/projects/malnutrition/manuscript_BMC_ID/indata_SCE_batchcorrect.rds")
dim(indata)
## Filter to have 10% present rate
indata <- indata[apply(assay(indata,"counts") != 0, 1, mean)>.20,]
dim(indata)
### Malnutrition only
indata <- indata[,which(colData(indata)$bmi_cat2 == "mal")]
dim(indata)
indataSCE <- SingleCellExperiment(assays = list(log_cpm = assay(indata, "log_cpm")), colData = colData(indata))
colnames(indataSCE) <- colnames(indata)
dim(indataSCE)
singleCellTK::plotPCA(indataSCE, useAssay = "log_cpm", runPCA = TRUE, shape = "batch",colorBy = "status")
rm(indataSCE)
set.seed(1)
tsne_out <- Rtsne(t(assay(indata,"log_cpm")), check_duplicates = FALSE, pca = TRUE, perplexity=10, theta=0.5, dims=2)
embedding <- as.data.frame(tsne_out$Y)
embedding$Class <- as.factor(indata$Tb_status)
g <- ggplot(embedding, aes(x=V1, y=V2, color=Class, label = colnames(assay(indata,"log_cpm")))) + geom_point(size=1.5) + xlab("T-SNE 1") + ylab("T-SNE 2") + theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("TSNE Plot")
plot(g)
set.seed(1)
umap_out <- umap(t(assay(indata,"log_cpm")))
embedding <- as.data.frame(umap_out$layout)
embedding$Class <- as.factor(indata$Tb_status)
g <- ggplot(embedding, aes(x=V1, y=V2, color=Class, label = colnames(assay(indata,"log_cpm")))) + geom_point(size=1.5) + xlab("UMAP 1") + ylab("UMAP 2") + theme(plot.title = element_text(hjust = 0.5)) +
ggtitle("UMAP Plot")
plot(g)
designBC <- model.matrix(~Tb_status, data=colData(indata))
#designBC
#colnames(designBC)
colnames(designBC) <- c("Intercept", "activeTB")
#head(designBC)
fitBC <- lmFit(assay(indata, "log_cpm"), designBC)
# Difference in expression between activeTB individuals and LTBI individuals, among malnourished individuals
contrast.matrixTB<- makeContrasts(activeTB, levels = designBC)
fitTB <- contrasts.fit(fitBC,contrast.matrixTB)
fitTB <- eBayes(fitTB)
#head(fitTB$coefficients)
#get full differential expression output table, sorted by p-value
limmaResTB <- topTable(fitTB, adjust.method = "BH", n = Inf, sort.by = "P")
#head(limmaResTB)
#Getting significant genes and rownames to plot
adjpcutoff <- 0.10
#adjpcutoff <- 0.05
adjpcutoff <- 0.01
limmaResTB.sig <- subset(limmaResTB, adj.P.Val < adjpcutoff)
write.csv(limmaResTB.sig,"malnut_only_siggenes.csv",quote=F)
datatable(limmaResTB.sig,options=list(scrollX=T,pageLength=15),rownames = T)
sigGenesTB <-rownames(limmaResTB.sig)
length(sigGenesTB)
#write(sigGenesTB,file="sigGenesTB.txt")
mean(unlist(TBsignatures) %in% sigGenesTB)
limmaResTB
rownames(limmaResTB)
match(rownames(limmaResTB), rowData(indata))
match(rownames(limmaResTB), rowData(indata)[,1])
rowData(indata)[match(rownames(limmaResTB), rowData(indata)[,1]),2]
annotations <- rowData(indata)[match(rownames(limmaResTB), rowData(indata)[,1]),2]
table(annotations)
dim(annotations
)
length(annotations)
dim(limmaResTB)
annotations <- rowData(indata)[match(rownames(limmaResTB.sig), rowData(indata)[,1]),2]
table(annotations)
datatable(annotations)
sigGenesTB <-rownames(limmaResTB.sig[annotations=="protein_coding"])
annotations=="protein_coding"
sigGenesTB <-rownames(limmaResTB.sig[annotations=="protein_coding",])
length(sigGenesTB)
sigGenesT
sigGenesTB
mat = as.matrix(assay(indata,"log_cpm")[sigGenesTB[1:500],])
mat = t(scale(t(mat)))
df=data.frame("TB Status"=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
special_red <- RColorBrewer::brewer.pal(3, "Set1")[1]
special_blue <- RColorBrewer::brewer.pal(3, "Set1")[2]
# COLORS FOR HEATMAP
col.me <- viridis::viridis(15)
colorList <- list("status" = setNames(c(special_red,
special_blue),
c("TB_mal", "LTBI_mal")))
# colorList <- list("status" = setNames(c(viridis::magma(20)[12],
#                                         viridis::magma(20)[18]),
#                                       c("TB_mal", "LTBI_mal")))
#mat <- readRDS("~/projects/malnutrition/DiffExp_matrix_mal.RDS")
#df_mal <- readRDS("~/projects/malnutrition/DiffExp_annot_mal.RDS")
mat = as.matrix(assay(indata,"log_cpm")[sigGenesTB[1:500],])
mat = t(scale(t(mat)))
df=data.frame("TB Status"=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Diff. Exp")
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Expression")
mean(unlist(TBsignatures) %in% rownames(limmaResTB.sig)))
mean(unlist(TBsignatures) %in% rownames(limmaResTB.sig))
designBC <- model.matrix(~Tb_status, data=colData(indata))
colnames(designBC) <- c("Intercept", "activeTB")
fitBC <- lmFit(assay(indata, "log_cpm"), designBC)
contrast.matrixTB<- makeContrasts(activeTB, levels = designBC)
fitTB <- contrasts.fit(fitBC,contrast.matrixTB)
fitTB <- eBayes(fitTB)
limmaResTB <- topTable(fitTB, adjust.method = "BH", n = Inf, sort.by = "P")
#Getting significant genes and rownames to plot
adjpcutoff <- 0.01
limmaResTB.sig <- subset(limmaResTB, adj.P.Val < adjpcutoff)
write.csv(limmaResTB.sig,"~/projects/malnutrition/manuscript_BMC_ID/figures/malnut_only_siggenes.csv",quote=F)
datatable(limmaResTB.sig,options=list(scrollX=T,pageLength=15),rownames = T)
mean(unlist(TBsignatures) %in% rownames(limmaResTB.sig))
### keep only protein coding genes
annotations <- rowData(indata)[match(rownames(limmaResTB.sig), rowData(indata)[,1]),2]
table(annotations)
sigGenesTB <-rownames(limmaResTB.sig[annotations=="protein_coding",])
mat = as.matrix(assay(indata,"log_cpm")[sigGenesTB[1:500],])
mat = t(scale(t(mat)))
df=data.frame("TB Status"=colData(indata)$Tb_status)
annot <- HeatmapAnnotation(df = df, col = list(TB_status = c(
"TB" = special_red, "LTBI" = special_blue)))
Heatmap(mat, show_row_names = F,
show_column_names = F,
top_annotation = annot,
col = col.me,
name = "Expression")
sigGenesTB <-rownames(limmaResTB.sig[annotations=="protein_coding",])
india44 <- read.table("~/projects/malnutrition/manuscript_BMC_ID/features_combined_44.txt", sep = "\t")
india48 <- read.table("~/projects/malnutrition/manuscript_BMC_ID/features_combined_48.txt", sep = "\t")
coldata <- read.table("~/projects/malnutrition/manuscript_BMC_ID/india_colData.txt", sep = "\t", header = TRUE)
rowdata <- read.table("~/projects/malnutrition/manuscript_BMC_ID/feature_types.txt", header=TRUE)
#replace colnames of india44
colnames(india44) <- gsub(x = colnames(india44), pattern= "SO_5007_([A-B])[0-9,A-Z]_([0-9]*)_[1-2]", replace="102\\2\\1")
colnames(india44) <- gsub(x = colnames(india44), pattern= "SO_5007_Set2_102_0?([0-9][0-9][0-9][0-9][0-9])", replace="102\\1A")
# Check that gsub did not create two columns with same name
stopifnot(length(unique(colnames(india44)))==44)
# Check that all column names are present in coldata
stopifnot(all(colnames(india44) %in% coldata$SUBJID))
# india48 colname replace
colnames(india48) <- gsub(x=colnames(india48), pattern="X102.([0-9]*).([A-B])0?", replace="102\\1\\2")
# Check that gsub did not create two columns with same name
stopifnot(length(unique(colnames(india48)))==48)
# Check that all column names are present in coldata
stopifnot(all(colnames(india48) %in% coldata$SUBJID))
#combine the india files, match colData and rowData
india <- as.matrix(cbind(india44, india48))
india <- india[,match(coldata$SUBJID,colnames(india))]
rowdata <- rowdata[match(rownames(india),rowdata[,1]),]
# make Summarized Experiment object
indata <- SummarizedExperiment(assays = SimpleList(counts = as.matrix(india)), colData = coldata, rowData = rowdata)
saveRDS(indata, file = "~/projects/malnutrition/manuscript_BMC_ID/indata_SCE.rds")
knitr::opts_chunk$set(echo = TRUE)
suppressPackageStartupMessages({
library(SummarizedExperiment)
library(SingleCellExperiment)
library(tidyverse)
library(TBSignatureProfiler)
library(sva)
library(Rtsne)
library(umap)
library(limma)
library(DT)
library(ComplexHeatmap)
library(enrichR)
})
india44 <- read.table("~/projects/malnutrition/manuscript_BMC_ID/features_combined_44.txt", sep = "\t")
india48 <- read.table("~/projects/malnutrition/manuscript_BMC_ID/features_combined_48.txt", sep = "\t")
coldata <- read.table("~/projects/malnutrition/manuscript_BMC_ID/india_colData.txt", sep = "\t", header = TRUE)
rowdata <- read.table("~/projects/malnutrition/manuscript_BMC_ID/feature_types.txt", header=TRUE)
#replace colnames of india44
colnames(india44) <- gsub(x = colnames(india44), pattern= "SO_5007_([A-B])[0-9,A-Z]_([0-9]*)_[1-2]", replace="102\\2\\1")
colnames(india44) <- gsub(x = colnames(india44), pattern= "SO_5007_Set2_102_0?([0-9][0-9][0-9][0-9][0-9])", replace="102\\1A")
# Check that gsub did not create two columns with same name
stopifnot(length(unique(colnames(india44)))==44)
# Check that all column names are present in coldata
stopifnot(all(colnames(india44) %in% coldata$SUBJID))
# india48 colname replace
colnames(india48) <- gsub(x=colnames(india48), pattern="X102.([0-9]*).([A-B])0?", replace="102\\1\\2")
# Check that gsub did not create two columns with same name
stopifnot(length(unique(colnames(india48)))==48)
# Check that all column names are present in coldata
stopifnot(all(colnames(india48) %in% coldata$SUBJID))
#combine the india files, match colData and rowData
india <- as.matrix(cbind(india44, india48))
india <- india[,match(coldata$SUBJID,colnames(india))]
rowdata <- rowdata[match(rownames(india),rowdata[,1]),]
# make Summarized Experiment object
indata <- SummarizedExperiment(assays = SimpleList(counts = as.matrix(india)), colData = coldata, rowData = rowdata)
saveRDS(indata, file = "~/projects/malnutrition/manuscript_BMC_ID/indata_SCE.rds")
colnames(india48)
india48 <- read.table("~/projects/malnutrition/manuscript_BMC_ID/features_combined_48.txt", sep = "\t")
colnames(india48)
cat(colnames(india48))
cat(colnames(india48),sep='\n')
